module RubyLox
  class Token
    TYPES: ::Array[:left_paren | :right_paren | :left_brace | :right_brace | :comma | :dot | :minus | :plus | :semicolon | :slash | :star | :bang | :bang_equal | :equal | :equal_equal | :greater | :greater_equal | :less | :less_equal | :identifier | :string | :number | :and | :class | :else | :false | :fun | :for | :if | :nil | :or | :print | :return | :super | :this | :true | :var | :while | :eof]

    attr_reader type: Symbol

    attr_reader line: Integer

    attr_reader literal: String | Numeric

    attr_reader lexeme: String

    # @param type [Symbol] Type of token
    # @param lexeme [String] The actual snippet of course matching the token
    # @param literal [String, Numeric] the value of a literal for literal tokens.
    # @param line [Integer] Source line on which the token appears
    def initialize: (Symbol `type`, String lexeme, (String | Numeric) literal, Integer line) -> void

    def to_s: () -> ::String

    # We want to be able to compare two ASTs so we need this looser method.
    # But for hash lookup we need to distinguish between tokens with the same
    # source but in different location. Therefore we will leave `eql?` and `hash`
    # unmodified.
    def ==: (untyped other) -> bool
  end
end
